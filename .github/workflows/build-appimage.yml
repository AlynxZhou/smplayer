name: Build Appimage
  
on: 
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    container: wachii/xenial-qt:5.14.0

    steps:
      - name: Install sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: smplayer

      - name: Get version
        run: |
            cd smplayer
            ./get_version.sh
            VERSION=`cat version`
            echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download smtube
        run: |
            git clone https://github.com/smplayer-dev/smtube.git smtube
            echo "USE_SMTUBE_LIB=1" >> $GITHUB_ENV
            
      - name: Compile smplayer
        run: |
            cd smplayer
            ./compile_appimage.sh

      - name: Install mpv
        run: |
            sudo add-apt-repository -y ppa:jonathonf/ffmpeg-4
            sudo apt-get update
            wget https://github.com/smplayer-dev/mpv-mod/releases/download/v0.33.1-52/mpv_0.33.1-1.xenial_amd64.deb
            sudo apt-get -y install ./mpv_0.33.1-1.xenial_amd64.deb --no-install-recommends
            cp /usr/bin/mpv smplayer/appdir/usr/bin/

      - name: Install mplayer
        run: |
            wget https://github.com/smplayer-dev/mplayer-mod/releases/download/v1.4-71/mplayer_1.4-1.xenial_amd64.deb
            sudo apt-get -y install ./mplayer_1.4-1.xenial_amd64.deb --no-install-recommends
            cp /usr/bin/mplayer smplayer/appdir/usr/bin

      - name: Install openssl
        run: |
            mkdir -p smplayer/appdir/usr/lib/
            cp -a /usr/local/ssl/lib/lib*.so* smplayer/appdir/usr/lib/

      - name: Create package
        run: |
            cd smplayer
            linuxdeployqt appdir/usr/share/applications/smplayer.desktop \
                          -executable=appdir/usr/bin/mpv \
                          -executable=appdir/usr/bin/mplayer \
                          -bundle-non-qt-libs \
                          -appimage --appimage-extract-and-run
    
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: smplayer-${{env.VERSION}}
          path: smplayer/*.AppImage

      - name: Upload package to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./smplayer/*.AppImage
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true          
